{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // To navigate after register\nimport { registerUser } from '../Api'; // Import API function\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst Register = () => {\n  _s();\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [avatar, setAvatar] = useState(null);\n  const [coverImage, setCoverImage] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('fullname', fullname);\n    formData.append('email', email);\n    formData.append('username', username);\n    formData.append('password', password);\n    if (avatar) formData.append('avatar', avatar);\n    if (coverImage) formData.append('coverImage', coverImage);\n    try {\n      // Call API function to register user\n      const data = await registerUser(formData);\n      console.log('User registered:', data);\n      // Redirect to login page after successful registration\n      navigate('/');\n    } catch (err) {\n      setError('Registration failed. Please try again.');\n    }\n  };\n\n  // return (\n  //     <div class=\"container mt-5 bg-light\">\n  //         <h2>Register</h2>\n  //         <form onSubmit={handleRegister}>\n  //             <div>\n  //                 <label>Fullname</label>\n  //                 <input\n  //                     type=\"text\"\n  //                     value={fullname}\n  //                     onChange={(e) => setFullname(e.target.value)}\n  //                     required\n  //                 />\n  //             </div>\n  //             <div>\n  //                 <label>Email</label>\n  //                 <input\n  //                     type=\"email\"\n  //                     value={email}\n  //                     onChange={(e) => setEmail(e.target.value)}\n  //                     required\n  //                 />\n  //             </div>\n  //             <div>\n  //                 <label>Username</label>\n  //                 <input\n  //                     type=\"text\"\n  //                     value={username}\n  //                     onChange={(e) => setUsername(e.target.value)}\n  //                     required\n  //                 />\n  //             </div>\n  //             <div>\n  //                 <label>Password</label>\n  //                 <input\n  //                     type=\"password\"\n  //                     value={password}\n  //                     onChange={(e) => setPassword(e.target.value)}\n  //                     required\n  //                 />\n  //             </div>\n  //             <div>\n  //                 <label>Avatar</label>\n  //                 <input\n  //                     type=\"file\"\n  //                     accept=\"image/*\"\n  //                     onChange={(e) => setAvatar(e.target.files[0])}\n  //                     required\n  //                 />\n  //             </div>\n  //             <div>\n  //                 <label>Cover Image (Optional)</label>\n  //                 <input\n  //                     type=\"file\"\n  //                     accept=\"image/*\"\n  //                     onChange={(e) => setCoverImage(e.target.files[0])}\n  //                 />\n  //             </div>\n  //             {error && <p style={{ color: 'red' }}>{error}</p>}\n  //             <button type=\"submit\">Register</button>\n  //         </form>\n  //     </div>\n  // );\n\n  return;\n};\n_s(Register, \"KRK74mFY2Zxq0mXyfUO704596c8=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","registerUser","Register","_s","fullname","setFullname","email","setEmail","username","setUsername","password","setPassword","avatar","setAvatar","coverImage","setCoverImage","error","setError","navigate","handleRegister","e","preventDefault","formData","FormData","append","data","console","log","err","_c","$RefreshReg$"],"sources":["D:/Training/APIs/vidtube-client/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // To navigate after register\r\nimport { registerUser } from '../Api'; // Import API function\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Register = () => {\r\n    const [fullname, setFullname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [avatar, setAvatar] = useState(null);\r\n    const [coverImage, setCoverImage] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('fullname', fullname);\r\n        formData.append('email', email);\r\n        formData.append('username', username);\r\n        formData.append('password', password);\r\n        if (avatar) formData.append('avatar', avatar);\r\n        if (coverImage) formData.append('coverImage', coverImage);\r\n\r\n        try {\r\n            // Call API function to register user\r\n            const data = await registerUser(formData);\r\n            console.log('User registered:', data);\r\n            // Redirect to login page after successful registration\r\n            navigate('/');\r\n        } catch (err) {\r\n            setError('Registration failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    // return (\r\n    //     <div class=\"container mt-5 bg-light\">\r\n    //         <h2>Register</h2>\r\n    //         <form onSubmit={handleRegister}>\r\n    //             <div>\r\n    //                 <label>Fullname</label>\r\n    //                 <input\r\n    //                     type=\"text\"\r\n    //                     value={fullname}\r\n    //                     onChange={(e) => setFullname(e.target.value)}\r\n    //                     required\r\n    //                 />\r\n    //             </div>\r\n    //             <div>\r\n    //                 <label>Email</label>\r\n    //                 <input\r\n    //                     type=\"email\"\r\n    //                     value={email}\r\n    //                     onChange={(e) => setEmail(e.target.value)}\r\n    //                     required\r\n    //                 />\r\n    //             </div>\r\n    //             <div>\r\n    //                 <label>Username</label>\r\n    //                 <input\r\n    //                     type=\"text\"\r\n    //                     value={username}\r\n    //                     onChange={(e) => setUsername(e.target.value)}\r\n    //                     required\r\n    //                 />\r\n    //             </div>\r\n    //             <div>\r\n    //                 <label>Password</label>\r\n    //                 <input\r\n    //                     type=\"password\"\r\n    //                     value={password}\r\n    //                     onChange={(e) => setPassword(e.target.value)}\r\n    //                     required\r\n    //                 />\r\n    //             </div>\r\n    //             <div>\r\n    //                 <label>Avatar</label>\r\n    //                 <input\r\n    //                     type=\"file\"\r\n    //                     accept=\"image/*\"\r\n    //                     onChange={(e) => setAvatar(e.target.files[0])}\r\n    //                     required\r\n    //                 />\r\n    //             </div>\r\n    //             <div>\r\n    //                 <label>Cover Image (Optional)</label>\r\n    //                 <input\r\n    //                     type=\"file\"\r\n    //                     accept=\"image/*\"\r\n    //                     onChange={(e) => setCoverImage(e.target.files[0])}\r\n    //                 />\r\n    //             </div>\r\n    //             {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    //             <button type=\"submit\">Register</button>\r\n    //         </form>\r\n    //     </div>\r\n    // );\r\n\r\n    return\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,YAAY,QAAQ,QAAQ,CAAC,CAAC;;AAEvC,OAAO,sCAAsC;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMmB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,cAAc,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEpB,QAAQ,CAAC;IACrCkB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAElB,KAAK,CAAC;IAC/BgB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEhB,QAAQ,CAAC;IACrCc,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEd,QAAQ,CAAC;IACrC,IAAIE,MAAM,EAAEU,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEZ,MAAM,CAAC;IAC7C,IAAIE,UAAU,EAAEQ,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEV,UAAU,CAAC;IAEzD,IAAI;MACA;MACA,MAAMW,IAAI,GAAG,MAAMxB,YAAY,CAACqB,QAAQ,CAAC;MACzCI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;MACrC;MACAP,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACVX,QAAQ,CAAC,wCAAwC,CAAC;IACtD;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACJ,CAAC;AAACd,EAAA,CAhGID,QAAQ;EAAA,QAQOF,WAAW;AAAA;AAAA6B,EAAA,GAR1B3B,QAAQ;AAkGd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}