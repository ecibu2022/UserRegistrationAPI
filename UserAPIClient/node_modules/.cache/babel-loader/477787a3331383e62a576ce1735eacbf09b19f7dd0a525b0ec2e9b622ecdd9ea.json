{"ast":null,"code":"import axios from'axios';// Set up Axios instance\nconst Api=axios.create({baseURL:'http://localhost:7000/api/v1',// Replace with your API's base URL\nheaders:{'Content-Type':'application/json'}});// Register user \n// It is working fine\nexport const registerUser=async formData=>{try{const response=await Api.post('/users/register',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Error registering user:',error.response?error.response.data:error.message);throw error;}};// Login user\nexport const loginUser=async(email,password)=>{try{const response=await Api.post('/users/login',{email,password});return response.data;}catch(error){console.error('Error logging in:',error.response?error.response.data:error.message);throw error;}};// Add more API functions as needed","map":{"version":3,"names":["axios","Api","create","baseURL","headers","registerUser","formData","response","post","data","error","console","message","loginUser","email","password"],"sources":["D:/Training/APIs/vidtube-client/src/Api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set up Axios instance\r\nconst Api = axios.create({\r\n    baseURL: 'http://localhost:7000/api/v1', // Replace with your API's base URL\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// Register user \r\n// It is working fine\r\nexport const registerUser = async (formData) => {\r\n    try {\r\n        const response = await Api.post('/users/register', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error registering user:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Login user\r\nexport const loginUser = async (email, password) => {\r\n    try {\r\n        const response = await Api.post('/users/login', { email, password });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error logging in:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Add more API functions as needed\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACrBC,OAAO,CAAE,8BAA8B,CAAE;AACzCC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CAEF;AACA;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC5C,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,iBAAiB,CAAEF,QAAQ,CAAE,CACzDF,OAAO,CAAE,CACL,cAAc,CAAE,qBACpB,CACJ,CAAC,CAAC,CACF,MAAO,CAAAG,QAAQ,CAACE,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAACH,QAAQ,CAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAGC,KAAK,CAACE,OAAO,CAAC,CAC9F,KAAM,CAAAF,KAAK,CACf,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,SAAS,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAChD,GAAI,CACA,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,cAAc,CAAE,CAAEM,KAAK,CAAEC,QAAS,CAAC,CAAC,CACpE,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAACH,QAAQ,CAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAGC,KAAK,CAACE,OAAO,CAAC,CACxF,KAAM,CAAAF,KAAK,CACf,CACJ,CAAC,CAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}